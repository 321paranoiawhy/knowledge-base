import{a3 as d,k as o,l as a,J as e,L as n,Z as s,ax as l,ag as t,j as c}from"./chunks/framework.CK7x57RQ.js";const S=JSON.parse('{"title":"Turbo Module","description":"","frontmatter":{"breadcrumb":true,"pageInfo":true,"heatmap":true,"copyright":true},"headers":[],"relativePath":"docs/frontend/react-native/Turbo-Module.md","filePath":"docs/frontend/react-native/Turbo-Module.md","lastUpdated":1720519695000}'),h={name:"docs/frontend/react-native/Turbo-Module.md"},k=a("h1",{id:"turbo-module",tabindex:"-1"},[s("Turbo Module "),a("a",{class:"header-anchor",href:"#turbo-module","aria-label":'Permalink to "Turbo Module"'},"​")],-1),g=a("h2",{id:"reading-materials",tabindex:"-1"},[s("Reading Materials "),a("a",{class:"header-anchor",href:"#reading-materials","aria-label":'Permalink to "Reading Materials"'},"​")],-1),b=l(`<h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><ul><li>懒加载 (仅开发时)</li><li>使用 <code>JSI (JavaScript Interface)</code> 进行 <code>JS</code> 和 <code>native</code> 间通信, 性能和效率更高于 <code>Bridge</code> 桥接方式</li><li>类型安全</li><li>向下兼容?</li><li>如何立即加载, 即取消懒加载特性</li></ul><h2 id="开启新架构" tabindex="-1">开启新架构 <a class="header-anchor" href="#开启新架构" aria-label="Permalink to &quot;开启新架构&quot;">​</a></h2><h3 id="安卓" tabindex="-1">安卓 <a class="header-anchor" href="#安卓" aria-label="Permalink to &quot;安卓&quot;">​</a></h3><p>在 <code>app/android/gradle.properties</code> 文件中设置:</p><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">newArchEnabled</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">true</span></span></code></pre></div><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span>RTNPort</span></span>
<span class="line"><span>├── android</span></span>
<span class="line"><span>│   ├── build.gradle</span></span>
<span class="line"><span>│   └── src</span></span>
<span class="line"><span>│       └── main</span></span>
<span class="line"><span>│           └── java</span></span>
<span class="line"><span>│               └── com</span></span>
<span class="line"><span>│                   └── rtnport</span></span>
<span class="line"><span>│                       └── PortPackage.java</span></span>
<span class="line"><span>├── js</span></span>
<span class="line"><span>│   └── index.ts</span></span>
<span class="line"><span>└── package.json</span></span></code></pre></div><p>在 <code>app</code> 目录下安装 <code>Turbo Module</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 根目录下</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># npm install ../&lt;Turbo Module Name&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ../RTNPort</span></span></code></pre></div><p>安装成功后可在 <code>app/package.json</code> 中看到如下依赖:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">dependencies</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">rtn-port</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">file:../RTNPort</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p><code>file:../RTNPort</code> 表示本地依赖</p><p>运行 <code>Codegen</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 根目录下</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> app/android</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./gradlew</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> generateCodegenArtifactsFromSchema</span></span></code></pre></div><p>运行 <code>Codegen</code> 成功后可在以下目录查看:</p><ul><li><code>RNTPort/android/build/generatedsource/codegen</code></li><li><code>app/node_modules/rtn-port/android/build/generated/source/codegen</code></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 根目录下</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> app/node_modules/rtn-port/android/build/generated/source/codegen</span></span></code></pre></div><p>目录结构为:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span>codegen</span></span>
<span class="line"><span>├── java</span></span>
<span class="line"><span>│   └── com</span></span>
<span class="line"><span>│       └── rtnport</span></span>
<span class="line"><span>│           └── NativePortSpec.java</span></span>
<span class="line"><span>├── jni</span></span>
<span class="line"><span>│   ├── CMakeLists.txt</span></span>
<span class="line"><span>│   ├── RTNPortSpec-generated.cpp</span></span>
<span class="line"><span>│   ├── RTNPortSpec.h</span></span>
<span class="line"><span>│   └── react</span></span>
<span class="line"><span>│       └── renderer</span></span>
<span class="line"><span>│           └── components</span></span>
<span class="line"><span>│               └── RTNPortSpec</span></span>
<span class="line"><span>│                   ├── ComponentDescriptors.cpp</span></span>
<span class="line"><span>│                   ├── ComponentDescriptors.h</span></span>
<span class="line"><span>│                   ├── EventEmitters.cpp</span></span>
<span class="line"><span>│                   ├── EventEmitters.h</span></span>
<span class="line"><span>│                   ├── Props.cpp</span></span>
<span class="line"><span>│                   ├── Props.h</span></span>
<span class="line"><span>│                   ├── RTNPortSpecJSI-generated.cpp</span></span>
<span class="line"><span>│                   ├── RTNPortSpecJSI.h</span></span>
<span class="line"><span>│                   ├── ShadowNodes.cpp</span></span>
<span class="line"><span>│                   ├── ShadowNodes.h</span></span>
<span class="line"><span>│                   ├── States.cpp</span></span>
<span class="line"><span>│                   └── States.h</span></span>
<span class="line"><span>└── schema.json</span></span></code></pre></div><p>注意, 当安卓原生代码或 <code>Turbo Module</code> 项目内代码发生变化时, 须重新执行 <code>codegen</code>, 并重新运行 <code>APP</code>, 否则会出现意料之外的错误</p><h2 id="metro-unable-to-resolve-module" tabindex="-1">Metro: unable to resolve module <a class="header-anchor" href="#metro-unable-to-resolve-module" aria-label="Permalink to &quot;Metro: unable to resolve module&quot;">​</a></h2>`,21),u=l('<p>配置 <code>metro.config.js</code> 文件中的 <code>resolver.nodeModulesPaths</code> 和 <code>watchFolders</code></p><h2 id="create-react-native-library" tabindex="-1"><code>create-react-native-library</code> <a class="header-anchor" href="#create-react-native-library" aria-label="Permalink to &quot;`create-react-native-library`&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npx</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create-react-native-library@latest</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> serial-port</span></span></code></pre></div><h2 id="类型映射" tabindex="-1">类型映射 <a class="header-anchor" href="#类型映射" aria-label="Permalink to &quot;类型映射&quot;">​</a></h2>',4),y=l(`<p>类型映射 (<code>Java</code> -&gt; <code>JavaScript</code>):</p><ul><li><code>Boolean</code> &lt;-&gt; <code>Bool</code></li><li><code>Integer</code> -&gt; <code>Number</code></li><li><code>Double</code> &lt;-&gt; <code>Number</code></li><li><code>Float</code> -&gt; <code>Number</code></li><li><code>String</code> &lt;-&gt; <code>String</code></li><li><code>ReadableMap</code> &lt;-&gt; <code>Object</code>, <code>WritableMap</code> &lt;-&gt; <code>Object</code></li><li><code>ReadableArray</code> &lt;-&gt; <code>Array</code>, <code>WritableArray</code> &lt;-&gt; <code>Array</code></li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 获取 key 对应值的类型</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ReadableType</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> readableMap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getType</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre></div><p>类型转换:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> com</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">facebook</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">react</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">bridge</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Arguments</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">WriteableArray</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> array</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Arguments</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createArray</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">List</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">WriteableArray</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> arrayFromList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Arguments</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">WritableMap</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> map</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Arguments</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createMap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre></div><h2 id="map" tabindex="-1"><code>Map</code> <a class="header-anchor" href="#map" aria-label="Permalink to &quot;\`Map\`&quot;">​</a></h2>`,6),f=l('<h3 id="readablemap" tabindex="-1"><code>ReadableMap</code> <a class="header-anchor" href="#readablemap" aria-label="Permalink to &quot;`ReadableMap`&quot;">​</a></h3><p><code>ReadableMap</code> 有以下方法:</p><ul><li><code>getArray(String name)</code></li><li><code>getBoolean(String name)</code></li><li><code>getDouble(String name)</code></li><li><code>getInt(String name)</code></li><li><code>getMap(String name)</code></li><li><code>getString(String name)</code></li><li><code>getType(String name)</code>, 返回值类型为 <code>ReadableType</code></li><li><code>isNull(String name)</code></li><li><code>keySetIterator()</code></li></ul><h3 id="writablemap" tabindex="-1"><code>WritableMap</code> <a class="header-anchor" href="#writablemap" aria-label="Permalink to &quot;`WritableMap`&quot;">​</a></h3><p><code>WritableMap</code> 继承自 <code>ReadableMap</code>, 除有 <code>ReadableMap</code> 上的方法外, 自身还有以下方法:</p><ul><li><code>merge</code></li><li><code>putArray</code></li><li><code>putBoolean</code></li><li><code>putDouble</code></li><li><code>putInt</code></li><li><code>putMap</code></li><li><code>putNull</code></li><li><code>putString</code></li></ul><h2 id="array" tabindex="-1"><code>Array</code> <a class="header-anchor" href="#array" aria-label="Permalink to &quot;`Array`&quot;">​</a></h2>',7),A=l('<h3 id="readablearray" tabindex="-1"><code>ReadableArray</code> <a class="header-anchor" href="#readablearray" aria-label="Permalink to &quot;`ReadableArray`&quot;">​</a></h3><p><code>ReadableArray</code> 有以下方法:</p><ul><li><code>getArray(int index)</code></li><li><code>getBoolean(int index)</code></li><li><code>getDouble(int index)</code></li><li><code>getInt(int index)</code></li><li><code>getMap(int index)</code></li><li><code>getString(int index)</code></li><li><code>getType(int index)</code>, 返回值类型为 <code>ReadableType</code></li><li><code>isNull(int index)</code></li><li><code>size()</code></li></ul><h3 id="writablearray" tabindex="-1"><code>WritableArray</code> <a class="header-anchor" href="#writablearray" aria-label="Permalink to &quot;`WritableArray`&quot;">​</a></h3><p><code>WritableArray</code> 继承自 <code>ReadableArray</code>, 除有 <code>ReadableArray</code> 上的方法外, 自身还有以下方法:</p><ul><li><code>pushArray</code></li><li><code>pushBoolean</code></li><li><code>pushDouble</code></li><li><code>pushInt</code></li><li><code>pushMap</code></li><li><code>pushNull</code></li><li><code>pushString</code></li></ul>',6);function m(v,_,D,C,B,T){const i=t("VPNolebaseInlineLinkPreview"),p=t("NolebaseGitContributors"),r=t("NolebaseGitChangelog");return c(),o("div",null,[k,g,a("ul",null,[a("li",null,[e(i,{href:"https://github.com/reactwg/react-native-new-architecture",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("react-native-new-architecture")]),_:1})]),a("li",null,[e(i,{href:"https://blog.200oksolutions.com/turbo-native-modules-for-android-resize-image/",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("Turbo Native Modules for Android – Resize Image")]),_:1})]),a("li",null,[e(i,{href:"https://medium.com/@under_the_hook/react-native-the-new-architecture-c4ba8ed8b452",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("Become a React Native Developer — The New Architecture")]),_:1})])]),b,a("ul",null,[a("li",null,[e(i,{href:"https://medium.com/@alielmajdaoui/linking-local-packages-in-react-native-the-right-way-2ac6587dcfa2",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("Linking Local Packages in React Native the Right Way")]),_:1})]),a("li",null,[e(i,{href:"https://medium.com/@stevegalili/configuration-of-react-native-cli-expo-apps-in-monorepos-%EF%B8%8F-6485b4f2cc43",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("Configuration of React Native CLI/Expo Apps in Monorepos")]),_:1})])]),u,a("ul",null,[a("li",null,[e(i,{href:"https://reactnative.dev/docs/native-modules-android#argument-types",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("Argument Types")]),_:1})]),a("li",null,[e(i,{href:"https://javadoc.io/doc/com.facebook.react/react-native/0.20.1/com/facebook/react/bridge/ReadableMap.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("ReadableMap")]),_:1})])]),y,a("ul",null,[a("li",null,[e(i,{href:"https://javadoc.io/doc/com.facebook.react/react-native/0.20.1/com/facebook/react/bridge/ReadableMap.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("ReadableMap")]),_:1})]),a("li",null,[e(i,{href:"https://javadoc.io/doc/com.facebook.react/react-native/0.20.1/com/facebook/react/bridge/WritableMap.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("WritableMap")]),_:1})])]),f,a("ul",null,[a("li",null,[e(i,{href:"https://javadoc.io/doc/com.facebook.react/react-native/0.20.1/com/facebook/react/bridge/ReadableArray.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("ReadableArray")]),_:1})]),a("li",null,[e(i,{href:"https://javadoc.io/doc/com.facebook.react/react-native/0.20.1/com/facebook/react/bridge/WritableArray.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[s("WritableArray")]),_:1})])]),A,e(p),e(r)])}const x=d(h,[["render",m]]);export{S as __pageData,x as default};
