server {
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    listen 80;
    server_name _;
    index index.html index.htm;

    include /etc/nginx/mime.types;

#     location / {
#             # content location
#             # root /app;
#             root /usr/share/nginx/knowledge-base;
#
#             # exact matches -> reverse clean urls -> folders -> not found
#             try_files $uri $uri.html $uri/ =404;
#
#             # non existent pages
#             error_page 404 /404.html;
#
#             # a folder without index.html raises 403 in this setup
#             error_page 403 /404.html;
#
#             # adjust caching headers
#             # files in the assets folder have hashes filenames
#             location ~* ^/assets/ {
#                 expires 1y;
#                 add_header Cache-Control "public, immutable";
#             }
#         }

#     location ~ (\.css|\.js)$ {
    location ~* ^/assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        internal;
    }

    location /knowledge-base {
        # content location
        # root /app;
        root /usr/share/nginx/knowledge-base;
        index index.html index.htm;
#         alias /usr/share/nginx/knowledge-base;

        # exact matches -> reverse clean urls -> folders -> not found
#         try_files $uri $uri.html $uri/ =404;
        try_files $uri $uri/ $uri.html /index.html =404;

        # non existent pages
        error_page 404 /404.html;

        # a folder without index.html raises 403 in this setup
        error_page 403 /404.html;

        # adjust caching headers
        # files in the assets folder have hashes filenames
        location ~* ^/assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # add any other static file extensions that you want to serve
#     location ~ (\.css|\.js)$ {
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         internal;
#     }
}
